version: '2'
volumes:
    config:
    mosquitto:
    influxdb2:
    grafana:
    cache:
    musicassistant:
services:
  homeassistant:
    depends_on:
        # - influxdb
        - mqtt
    build: homeassistant
    ports:
      - "80:8123"
      - "1400:1400"
    privileged: true
    volumes:
      - 'config:/config'
    restart: always
  mqtt:
    build: mqtt
    ports:
      - "1883:1883"
    restart: always
    volumes:
      - mosquitto:/mosquitto/data
  hass-configurator:
    image: "causticlab/hass-configurator-docker:latest"
    restart: always
    ports:
      - "3218:3218"
    volumes:
      - 'config:/hass-config'
    environment:
      - HC_BASEPATH=/hass-config
  appdaemon:
    container_name: app-daemon
    image: acockburn/appdaemon:latest
    ports:
      - "5050:5050"
    volumes:
      - config:/conf
    restart: always
    depends_on:
      - homeassistant
  # influxdb:
  #   image: influxdb:2.5
  #   ports:
  #     - "8086:8086"
  #     - "8088:8088"
  #   environment:
  #     INFLUXDB_DB: homeassistant
  #   volumes:
  #     - influxdb2:/var/lib/influxdb2
  music-assistant-server:
    image: ghcr.io/music-assistant/server:latest # <<< Desired release version here (or use beta to get the latest beta version)
    container_name: music-assistant-server
    restart: unless-stopped
    # Network mode must be set to host for MA to work correctly
    network_mode: host
    volumes:
      - musicassistant:/data/
    # privileged caps (and security-opt) needed to mount smb folders within the container
    cap_add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    security_opt:
      - apparmor:unconfined
    environment:
      # Provide logging level as environment variable.
      # default=info, possible=(critical, error, warning, info, debug)
      - LOG_LEVEL=info
  #grafana:
  #  image: grafana/grafana:8.1.2
  #  volumes:
  #    - grafana:/var/lib/grafana
  #  environment:
  #    - GF_INSTALL_PLUGINS=grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource
  #  ports:
  #      - "3010:3000/tcp"
